#pragma once
#ifndef WLFW_WINDOW_XCB_HEADER
#define WLFW_WINDOW_XCB_HEADER

#include "../NativeWindow.hpp"

namespace wl {
    ////////////////////////////////////////////////////////////
    /// \brief Window XCB Class
    ///
    ////////////////////////////////////////////////////////////
    class WLFW_API WindowXCB : public NativeWindow {
    public:
        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Constructor
        ///
        ////////////////////////////////////////////////////////////
        WindowXCB(const WindowProps& windowProps = WindowProps());

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Destructor
        ///
        ////////////////////////////////////////////////////////////
        virtual ~WindowXCB();

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Update Function
        ///
        ////////////////////////////////////////////////////////////
        virtual void Update();

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Set Event Handler Function
        ///
        ////////////////////////////////////////////////////////////
        virtual void SetEventHandler(const EventHandler& handler);

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Get Connection Function
        ///
        ////////////////////////////////////////////////////////////
        virtual xcb_connection_t*& GetConnection();

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Get Window Function
        ///
        ////////////////////////////////////////////////////////////
        virtual xcb_window_t& GetWindow();

        ////////////////////////////////////////////////////////////
        /// \brief WindowXCB Get Event Handler Function
        ///
        ////////////////////////////////////////////////////////////
        virtual EventHandler& GetEventHandler();

    private:
        xcb_connection_t* m_connection;
        xcb_window_t m_window;
        EventHandler m_handler;

    };

    using Window = WindowXCB;
};

#endif